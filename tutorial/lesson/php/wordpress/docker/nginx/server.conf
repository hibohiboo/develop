server {
    listen 80 default;
    server_name localhost;
    charset utf-8;
    root /var/www/html;
    index index.php index.html index.htm;
 # WordPress マルチサイトのサブディレクトリ用ルール。
 # どの server {} ブロックからもインクルードできるよう設計されています。
 
 # この命令文は奇妙に見えるかもしれません。これは以下のルールすべてが失敗したときにマッチを試みます。
 # http://wiki.nginx.org/HttpCoreModule
 location / {
 try_files $uri $uri/ /index.php?$args;
 }
 
 # */wp-admin へのリクエスト末尾にスラッシュを追加します。
 rewrite /wp-admin$ $scheme://$host$uri/ permanent;
 
 # Expiresヘッダを送り、404エラーログをオフにするディレクティブ。
 location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
 expires 24h;
 log_not_found off;
 }
 
 # wp-includes/ms-files.php にアップロードされたファイルを送ります。
 rewrite /files/$ /index.php last;
 
 # マルチサイトの場合、パフォーマンス向上を目的として、適切なサブディレクトリへとシンボリックリンクを張るキャッシュプラグインがあります。
 set $cachetest "$document_root/wp-content/cache/ms-filemap/${host}${uri}";
 if ($uri ~ /$) {
 set $cachetest "";
 }
 if (-f $cachetest) {
 # URIの書き換えを行い、それ以上の書き換え処理をストップします。そうすることでこれ以上動くこともなく、次のルールが実行されることもありません。
 rewrite ^ /wp-content/cache/ms-filemap/${host}${uri} break;
 }
 
 if ($uri !~ wp-content/plugins) {
 rewrite /files/(.+)$ /wp-includes/ms-files.php?file=$1 last;
 }
 
 # 必要なら、キャッシュプラグインのためにいずれかの行のコメントを外してください。
 #include global/wordpress-ms-subdir-wp-super-cache.conf;
 #include global/wordpress-ms-subdir-w3-total-cache.conf;
 
 # マルチサイトの '.../wp-.*' と '.../*.php' を書き換え
 #if (!-e $request_filename) {
 #	rewrite ^/[_0-9a-zA-Z-]+(/wp-.*) $1 last;
 #	rewrite ^/[_0-9a-zA-Z-]+.*(/wp-admin/.*\.php)$ $1 last;
 #	rewrite ^/[_0-9a-zA-Z-]+(/.*\.php)$ $1 last;
 #}
 
 # すべてのPHPファイルを php-fpm/php-fcgi サーバーに送ります。
 location ~ \.php$ {
 # ゼロデイ攻撃を防ぐ
 # http://forum.nginx.org/read.php?2,88845,page=3
 # このサーバーにファイルが存在しなくい場合、404エラーになって動作しないようにします。
 # 別のマシーンに php-fpm/php-fcgi を設定する場合は 'try_files' のラインをコメントアウトしてください。自分のマシーンがハックされないようお祈りしましょう。
 try_files $uri =404;
 
 fastcgi_split_path_info ^(.+\.php)(/.+)$;
 include fastcgi_params;
 fastcgi_index index.php;
 fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
 #	fastcgi_intercept_errors on;
 fastcgi_pass php7:9000;
 }
}